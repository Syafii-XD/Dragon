# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Jul  5 04:35:19 2022
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))